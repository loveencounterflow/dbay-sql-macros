{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/regexes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nGUY                       = require 'guy'\n\n\n###\n\nCharacter (CHR) regexes (RXs) are divided into two modes:\n\n* `strict` mode keeps close to a practical test against a recent version (3.39) of SQLite. In this test, it\n  turned out that SQLite allows all Unicode codepoints greater than `U+007f <control> : DELETE [DEL]` in\n  names. This is impratical because all codepoints in the range `U+0080 .. U+00A0` are somehwat obscure\n  control codes and the non-breaking space. Therefore, an alternative mode, dubbed\n* `practical` mode has been added that excludes these problematic codepoints.\n* Each mode is split into two mutually complementary factions, `allowed` and `forbidden`; under these, we\n  find\n* `head` for the first character and `tail` for the trailing characters in identifiers.\n* Additionally, there are two entries in `forbidden.paren`, which list the codepoints in `tail` plus\n  `U+0028 Left Parenthesis`, with one entry per mode.\n* All codepoint collections...\n  * are defined as regular expression literals with the `u`nicode flag set; this provides some level of\n    assurance against nonsensical regular expression constructs;\n  * are given as positive character classes within a single pair of square brackets.\n\n###\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@rx =\n  chrs:\n    strict:\n      allowed:\n        head:     /// [        A-Z _ a-z \\u{0080}-\\u{10ffff}  ] ///u\n        tail:     /// [  $ 0-9 A-Z _ a-z \\u{0080}-\\u{10ffff}  ] ///u\n      forbidden:\n        head:     /// [  \\x00-\\x2f           \\x3a-\\x40 \\x5b-\\x5e \\x60 \\x7b-\\x7f ] ///u\n        tail:     /// [  \\x00-\\x23 \\x25-\\x2f \\x3a-\\x40 \\x5b-\\x5e \\x60 \\x7b-\\x7f ] ///u\n        paren:    /// [  ( $ 0-9 A-Z _ a-z \\u{0080}-\\u{10ffff}  ] ///u\n    practical:\n      allowed:\n        head:     /// [        A-Z _ a-z \\u{00a1}-\\u{10ffff}  ] ///u\n        tail:     /// [  $ 0-9 A-Z _ a-z \\u{00a1}-\\u{10ffff}  ] ///u\n      forbidden:\n        head:     /// [  \\x00-\\x2f           \\x3a-\\x40 \\x5b-\\x5e \\x60 \\x7b-\\xa0 ] ///u\n        tail:     /// [  \\x00-\\x23 \\x25-\\x2f \\x3a-\\x40 \\x5b-\\x5e \\x60 \\x7b-\\xa0 ] ///u\n        paren:    /// [  ( $ 0-9 A-Z _ a-z \\u{00a1}-\\u{10ffff}  ] ///u\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rx_for_any_name = ( prefix = '@', mode = 'practical' ) -> ///\n  #{prefix}\n  #{@rx.chrs[ mode ].allowed.head.source}\n  #{@rx.chrs[ mode ].allowed.tail.source}*\n  ///sgu\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rx_for_bare_name = ( prefix = '@', mode = 'practical' ) -> ///\n  #{prefix}\n  #{@rx.chrs[ mode ].allowed.head.source}\n  #{@rx.chrs[ mode ].allowed.tail.source}*\n  (?! #{@rx.chrs[ mode ].forbidden.paren.source} )\n  ///sgu\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rx_for_paren_name = ( prefix = '@', mode = 'practical' ) -> ///\n  #{prefix}\n  #{@rx.chrs[ mode ].allowed.head.source}\n  #{@rx.chrs[ mode ].allowed.tail.source}*\n  (?= [(] )\n  ///sgu\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rx_for_start_paren_name = ( prefix = '@', mode = 'practical' ) -> ///\n  ^\n  #{prefix}\n  #{@rx.chrs[ mode ].allowed.head.source}\n  #{@rx.chrs[ mode ].allowed.tail.source}*\n  (?= [(] )\n  ///u\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rx_for_parameter = ( mode = 'practical', vanisher = '|', parameter ) -> ///\n  (?<! \\\\ )\n  #{GUY.str.escape_for_regex parameter}\n  (?:\n    (?: #{GUY.str.escape_for_regex vanisher} )\n    |\n    (?: (?! #{@rx.chrs[ mode ].forbidden.paren.source} ) )\n    )\n  ///gu\n\n"
  ]
}